#pragma checksum "C:\Users\abc\Downloads\qnhhoa\Admin\Views\Chart\Charts.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d42b5df7e989ef37def6a8c096bfaf7712ad3e61"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Chart_Charts), @"mvc.1.0.view", @"/Views/Chart/Charts.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\abc\Downloads\qnhhoa\Admin\Views\_ViewImports.cshtml"
using Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\abc\Downloads\qnhhoa\Admin\Views\_ViewImports.cshtml"
using Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d42b5df7e989ef37def6a8c096bfaf7712ad3e61", @"/Views/Chart/Charts.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"425c13ece3d0cfbb1fc0f84962af70815be6a0e8", @"/Views/_ViewImports.cshtml")]
    public class Views_Chart_Charts : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42b5df7e989ef37def6a8c096bfaf7712ad3e613120", async() => {
                WriteLiteral(@"
    <title>Flowchart</title>
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
    <meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=1.0"" />
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js""></script>
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"">
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.bundle.min.js""></script>

    <script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.bundle.min.js'></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42b5df7e989ef37def6a8c096bfaf7712ad3e614785", async() => {
                WriteLiteral(@"
    <div class=""page-content page-container"" id=""page-content"">
        <div class=""padding"">
            <div class=""row"">
                <div class=""container-fluid d-flex justify-content-center"">
                    <div class=""col-sm-8 col-md-6"">
                        <div class=""card"">
                            <div class=""card-header""></div>
                            <div class=""card-body"" style=""height: 420px"">
                                <div class=""chartjs-size-monitor""
                                     style=""position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"">
                                    <div class=""chartjs-size-monitor-expand""
                                         style=""position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"">
                                        <div style=""position:absolute;width:1000000px;hei");
                WriteLiteral(@"ght:1000000px;left:0;top:0"">
                                        </div>
                                    </div>
                                    <div class=""chartjs-size-monitor-shrink""
                                         style=""position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"">
                                        <div style=""position:absolute;width:200%;height:200%;left:0; top:0"">
                                        </div>
                                    </div>
                                </div> <canvas id=""chart-line"" width=""299"" height=""200"" class=""chartjs-render-monitor""
                                               style=""display: block; width: 299px; height: 200px;""></canvas>
                            </div>
                        </div>
                    </div>
                    <div class=""col-sm-5"" style=""
                                display: flex;
                               ");
                WriteLiteral(@" justify-content: center;
                                align-items: center;
                            "">
                        <canvas id=""pieChart"" style=""max-width: 500px;""></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>

    <script>
        var url = window.location;
    var APIURL = url.protocol + ""//"" + url.hostname + "":""+url.port;
        const URLAPI = {
            getCharts: ""/getCharts""
        }
        const getApi = async () => {
            console.log(APIURL+URLAPI.getCharts);
            return await fetch(APIURL+URLAPI.getCharts);
        }
        const renderCircle = async () => {
            var data = await getApi();
            var result = await data.json();
            var circles = result.circles;
            var ctxP = document.getElementById(""pieChart"").getContext('2d');
            var myPieChart = new Chart(ctxP, {
                type: 'pie',
                data: {
          ");
                WriteLiteral(@"          labels: circles.map(e => e.month),
                    datasets: [{
                        data: circles.map(e => e.tong),
                        backgroundColor: [""#007bff""],
                        hoverBackgroundColor: [""#007Aff""]
                    }]
                },
                options: {
                    responsive: true
                }
            });
        }
        renderCircle();
        const render = async () => {

            var data = await getApi();
            var result = await data.json();
            var bars = result.bars;
            console.log(bars)
            var ctx = $(""#chart-line"");
            var myLineChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: bars.map(e => e.ngay),
                    datasets: [{
                        data: bars.map(e => e.spID),
                        label: ""Number of "",
                        borderColor: ""#458af7"",
                   ");
                WriteLiteral(@"     backgroundColor: '#458af7',
                        fill: false
                    }, {
                        data: bars.map(e => e.rt),
                        label: ""Rating"",
                        borderColor: ""#8e5ea2"",
                        fill: true,
                        backgroundColor: '#8e5ea2'
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: ''
                    }
                }
            });
        }
        render();
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
